# AgiliaLinux setup library: set of core installation functions.
cmake_minimum_required(VERSION 2.4)
if(COMMAND cmake_policy)
	cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

# Enabling building of shared libs
SET(BUILD_SHARED_LIBS ON)

# Check 64 bit
if (CMAKE_SIZEOF_VOID_P EQUAL 4)
	SET(X86_64 OFF)
else (CMAKE_SIZEOF_VOID_P EQUAL 4)
	SET(X86_64 ON)
	ADD_DEFINITIONS(-DX86_64)
endif(CMAKE_SIZEOF_VOID_P EQUAL 4)

# Compilation definitions.
ADD_DEFINITIONS(-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DLARGEFILE64_SOURCE -DDL_CLEANUP -I. -I/usr/include/libxml2 -Wall -W -DNEW_INSTALL_SYSTEM -DUSE_SYSTEM_SED -DDEP_NORMALIZE -DLINUX_DEFINED)

ADD_DEFINITIONS(${CXXFLAGS})
#ADD_DEFINITIONS(-O0 -DDEBUG -g)

ADD_LIBRARY(agiliasetup SHARED agiliasetup parser)
TARGET_LINK_LIBRARIES(agiliasetup mpkg mpkg-parted mpkgsupport nwidgets)
ADD_EXECUTABLE(parser-test parser-test)
TARGET_LINK_LIBRARIES(parser-test agiliasetup)

FILE(GLOB files "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
FILE(GLOB scripts "${CMAKE_CURRENT_SOURCE_DIR}/support-files/*.sh")
FILE(GLOB conftemplate "${CMAKE_CURRENT_SOURCE_DIR}/support-files/mpkg*.xml")
FILE(GLOB dbtemplate "${CMAKE_CURRENT_SOURCE_DIR}/support-files/packages.db")



INSTALL(FILES ${files} DESTINATION include)
IF(X86_64)
	INSTALL(TARGETS agiliasetup
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION lib64
		ARCHIVE DESTINATION lib64
	)
ELSE(X86_64)
	INSTALL(TARGETS agiliasetup
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib
	)
ENDIF(X86_64)

INSTALL(FILES ${scripts} DESTINATION bin PERMISSIONS WORLD_READ WORLD_EXECUTE OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE )
INSTALL(FILES ${conftemplate} DESTINATION share/setup)
INSTALL(FILES ${dbtemplate} DESTINATION share/setup)

